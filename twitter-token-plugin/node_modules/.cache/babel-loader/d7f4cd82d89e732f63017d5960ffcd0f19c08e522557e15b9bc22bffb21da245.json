{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cy020\\\\CascadeProjects\\\\twitter-token-plugin\\\\src\\\\components\\\\WalletConnect.js\";\nimport React from 'react';\nimport { Button, Card, CardContent, Typography } from '@mui/material';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletConnect = ({\n  onConnect,\n  setAccount\n}) => {\n  const connectWallet = async () => {\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n          onConnect(true);\n        }\n      } else {\n        alert('Please install MetaMask or another Web3 wallet!');\n      }\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      alert('Failed to connect wallet. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connectWallet,\n        startIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"wallet\",\n          children: \"\\uD83D\\uDC5B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }, this),\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","Button","Card","CardContent","Typography","ethers","jsxDEV","_jsxDEV","WalletConnect","onConnect","setAccount","connectWallet","window","ethereum","provider","BrowserProvider","accounts","send","length","alert","error","console","sx","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","startIcon","role","_c","$RefreshReg$"],"sources":["C:/Users/cy020/CascadeProjects/twitter-token-plugin/src/components/WalletConnect.js"],"sourcesContent":["import React from 'react';\nimport { Button, Card, CardContent, Typography } from '@mui/material';\nimport { ethers } from 'ethers';\n\nconst WalletConnect = ({ onConnect, setAccount }) => {\n  const connectWallet = async () => {\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        \n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n          onConnect(true);\n        }\n      } else {\n        alert('Please install MetaMask or another Web3 wallet!');\n      }\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      alert('Failed to connect wallet. Please try again.');\n    }\n  };\n\n  return (\n    <Card sx={{ mb: 2 }}>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Connect Wallet\n        </Typography>\n        <Button\n          variant=\"contained\"\n          onClick={connectWallet}\n          startIcon={<span role=\"img\" aria-label=\"wallet\">ðŸ‘›</span>}\n        >\n          Connect Wallet\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default WalletConnect;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AACrE,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EACnD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMC,QAAQ,GAAG,IAAIT,MAAM,CAACU,eAAe,CAACH,MAAM,CAACC,QAAQ,CAAC;QAC5D,MAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;QAE/D,IAAID,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;UACvBR,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;UACvBP,SAAS,CAAC,IAAI,CAAC;QACjB;MACF,CAAC,MAAM;QACLU,KAAK,CAAC,iDAAiD,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDD,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAED,oBACEZ,OAAA,CAACL,IAAI;IAACoB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eAClBjB,OAAA,CAACJ,WAAW;MAAAqB,QAAA,gBACVjB,OAAA,CAACH,UAAU;QAACqB,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAF,QAAA,EAAC;MAEtC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbvB,OAAA,CAACN,MAAM;QACLwB,OAAO,EAAC,WAAW;QACnBM,OAAO,EAAEpB,aAAc;QACvBqB,SAAS,eAAEzB,OAAA;UAAM0B,IAAI,EAAC,KAAK;UAAC,cAAW,QAAQ;UAAAT,QAAA,EAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAE;QAAAN,QAAA,EAC3D;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACI,EAAA,GApCI1B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}